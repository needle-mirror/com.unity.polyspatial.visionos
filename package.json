{
  "name": "com.unity.polyspatial.visionos",
  "displayName": "PolySpatial visionOS",
  "version": "0.5.0",
  "unity": "2022.3",
  "unityRelease": "9f1",
  "description": "Unity PolySpatial integration package to support shared and immersive mode rendering on Apple visionOS.",
  "dependencies": {
    "com.unity.polyspatial": "0.5.0",
    "com.unity.xr.visionos": "0.5.0",
    "com.unity.xr.management": "4.4.0"
  },
  "versionDefines": [],
  "upm": {
    "changelog": ""
  },
  "_upm": {
    "changelog": "### Added\n- **Particle System Modes**: Developers can now select between particle system modes under `Project Settings > PolySpatial > Particle Mode`. The available modes offer tradeoffs between performance and quality:\n  - **Bake to Mesh**: In this mode, a dynamic mesh is baked for every particle system every frame. It closely aligns the visuals with Unity rendering, allowing leverage of most features of Unity's built-in particle systems, including custom shaders authored with ShaderGraph. However, this mode currently imposes a significant performance overhead. We are actively working to improve performance for baked particles.\n\n### Changed\n\n### Deprecated\n\n### Removed\n\n### Fixed\n- Fixed an issue where projects with `com.unity.polyspatial.visionos` would fail to build when App Mode is set to Virtual Reality. Device builds were failing with the error `Undefined symbol: _GetPolySpatialNativeAPI`, and simulator builds failed to run with a similar error.\n\n### Security"
  },
  "upmCi": {
    "footprint": "eefde9c79487438327aa62657ff7c93b170ff256"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.polyspatial.visionos@0.5/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/quantum.git",
    "type": "git",
    "revision": "563b6ef49598724e6c4f624b194447d1cb537faf"
  }
}
