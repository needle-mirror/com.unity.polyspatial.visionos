{"name":"com.unity.polyspatial.visionos","displayName":"PolySpatial visionOS","version":"2.3.1","unity":"6000.0","unityRelease":"22f1","description":"Unity PolySpatial integration package to support shared and immersive mode rendering on Apple visionOS.\nUnity PolySpatial and visionOS support is only available to Unity Pro, Unity Enterprise, and Unity Industry users. Learn more about these plans at unity.com/pricing.","dependencies":{"com.unity.polyspatial":"2.3.1","com.unity.polyspatial.xr":"2.3.1","com.unity.xr.visionos":"2.3.1","com.unity.xr.management":"4.5.0"},"repository":{"revision":"35637bcda17b346ee6e16363f2c503714a7c6df0","type":"git","url":"https://github.cds.internal.unity3d.com/unity/polyspatial.git"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.polyspatial.visionos@2.3/manual/index.html","_upm":{"changelog":"### Added\n- VisionOSVideoComponent now has the capability to load a video clip from a URL instead of just a VideoClip. Additionally, a Preroll property allows the component to attempt to load the video clip before it plays it, to allow for smoother playback.\n- Added support for getting game controller input in visionOS 2.0. Apple changes 2.0 to allow use of game controllers to handle chrome interaction, which means that game controller input would almost never get to the application. Now we register intent to handle game pad inputs so that we can get controller input again.\n\n### Changed\n- The PlayToDevice app will now attempt to broadcast to any Unity editors on the local subnet. Upon success, an entry for the device will appear in the \"Available Devices\" list in the Play To Device panel.\n- RealityKit apps now send `OnApplicationFocus` and `OnApplicationPause` messages when the app changes its background state.\n\n### Fixed\n- Fixed swizzling of ambient occlusion term for standard lit materials (Unity uses the value of the green texture channel).\n- Fixed mesh corruption issue for meshes with blend shapes and multiple UV sets/vertex colors.\n- Fixed crash when converting LowLevelMesh instances (i.e., meshes transferred on the GPU) to shapes for MeshCollider instances.\n- Fixed issue with frame \"hitches\" (frame times 2x/3x target) when updating meshes via GPU transfer.\n- Improved performance of loading/instantiating collider meshes."}}